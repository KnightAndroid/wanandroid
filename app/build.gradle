apply plugin: 'com.android.application'
apply plugin: 'android-aspectjx'
apply from: 'res_guard.gradle'//压缩apk


android {
    compileSdkVersion rootProject.ext.compile_sdk_version
    buildToolsVersion rootProject.ext.build_tools_version


    defaultConfig {
        applicationId "com.knight.wanandroid"
        minSdkVersion rootProject.ext.min_sdk_version
        targetSdkVersion rootProject.ext.target_sdk_version
        versionCode rootProject.ext.appVersionCode
        versionName rootProject.ext.appVersionName
        multiDexEnabled true

        flavorDimensions "versionCode"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]

            }
        }

        ndk{
            //设置支持的SO库架构
            abiFilters 'armeabi-v7a','arm64-v8a'
        }
    }

    //签名配置
    signingConfigs {
        debug{

        }

        release {
            storeFile file('../wanandroid.jks')//密钥文件路径
            storePassword "wanandroid"//密钥文件密码
            keyAlias "wanandroid"//key别名
            keyPassword "wanandroid"//key密码
        }

    }

    //混淆 压缩体积配置
    buildTypes {
        release {
            //代码混淆开关
            minifyEnabled true
            //移除无用资源
            shrinkResources true
            //压缩对齐开关
            zipAlignEnabled true
            //混淆规则文件
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //签名信息配置
            signingConfig signingConfigs.release
        }
    }

    // 支持 JDK 1.8 编译
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    //是否开启DataBinding
    dataBinding {
        enabled = true
    }

    //设置 Apk 输出文件名配置
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = rootProject.getName() + '_v' + variant.versionName + '_' + variant.buildType.name
            if (variant.buildType.name == buildTypes.release.getName()) {
                outputFileName += '_' + new Date().format('MMdd')
            }
            outputFileName += '.apk'
        }
    }

    aspectjx {
        // 排除一些第三方库的包名（Gson、 LeakCanary 和 AOP 有冲突）
        // exclude 'androidx', 'com.google', 'com.squareup', 'org.apache', 'com.alipay', 'com.taobao', 'versions.9'
        // 只对以下包名做 AOP 处理
        include 'com.knight.wanandroid'
        // 否则就会引发冲突，具体表现为：
        // 编译不过去，报错：java.util.zip.ZipException：Cause: zip file is empty
        // 编译能过去，但运行时报错：ClassNotFoundException: Didn't find class on path: DexPathList
    }

    //配置渠道
    productFlavors {
        develop {}
        qa {}
        pro {}
    }




}



dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    // 基类封装
    implementation project(':library_base')
    // 欢迎模块
    implementation project(':module_welcome')
    // Home模块
    implementation project(":module_home")
    // 广场模块
    implementation project(":module_square")
    // 项目模块
    implementation project(":module_project")
    // 体系模块
    implementation project(":module_hierachy")
    // 我的模块
    implementation project(":module_mine")
    // 网页模块
    implementation project(":module_web")
    // 微信模块
    implementation project(":module_wechat")
    // 信息模块
    implementation project(":module_message")
    // 设置模块
    implementation project(":module_set")
    // 工具类模块
    implementation project(":module_utils")
    //课程模块
    implementation project(":module_course")

    //Arouter 路由插件 https://github.com/alibaba/ARouter
    annotationProcessor "com.alibaba:arouter-compiler:$arouterVersion"
    //implementation "com.github.onestravel:OneBottomNavigationBar:$bottom_navigatVersion"
    //底部导航插件 https://github.com/ittianyu/BottomNavigationViewEx
    implementation 'com.github.ittianyu:BottomNavigationViewEx:2.0.4'
    //Google material库
    implementation 'com.google.android.material:material:1.3.0-alpha01'
}