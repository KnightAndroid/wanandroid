apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compile_sdk_version
    buildToolsVersion rootProject.ext.build_tools_version

    defaultConfig {
        minSdkVersion rootProject.ext.min_sdk_version
        targetSdkVersion rootProject.ext.target_sdk_version
        versionCode rootProject.ext.appVersionCode
        versionName rootProject.ext.appVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        javaCompileOptions{
            annotationProcessorOptions{
                arguments = [AROUTER_MODULE_NAME : project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //是否开启DataBinding
    dataBinding {
        enabled = true
    }

    // 支持 JDK 1.8
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }


}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$junitextVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCoreVersion"
    api "com.alibaba:arouter-api:$arouterVersion"
    annotationProcessor "com.alibaba:arouter-compiler:$arouterVersion"
    //在module里使用api 主app依赖了这个module,则可以直接使用这些库,不用重新导入
    api "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    api project (':library_componentbase')

}